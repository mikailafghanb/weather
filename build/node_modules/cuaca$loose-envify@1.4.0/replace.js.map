{"version":3,"sources":["replace.js"],"names":["jsTokens","require","default","processEnvRe","spaceOrCommentRe","replace","src","envs","test","out","purge","some","env","_","indexOf","lastIndex","parts","match","i","length","prevCodeToken","getAdjacentCodeToken","nextCodeToken","replacement","getReplacementString","push","join","dir","part","name","j","JSON","stringify","module","exports"],"mappings":"AAAA;;;;AAEA,MAAIA,WAAWC,QAAQ,iBAAR,EAAqBC,OAApC;;AAEA,MAAIC,eAAe,oCAAnB;AACA,MAAIC,mBAAmB,gBAAvB;;AAEA,WAASC,OAAT,CAAiBC,GAAjB,EAAsBC,IAAtB,EAA4B;AAC1B,QAAI,CAACJ,aAAaK,IAAb,CAAkBF,GAAlB,CAAL,EAA6B;AAC3B,aAAOA,GAAP;AACD;;AAED,QAAIG,MAAM,EAAV;AACA,QAAIC,QAAQH,KAAKI,IAAL,CAAU,UAASC,GAAT,EAAc;AAClC,aAAOA,IAAIC,CAAJ,IAASD,IAAIC,CAAJ,CAAMC,OAAN,CAAc,OAAd,MAA2B,CAAC,CAA5C;AACD,KAFW,CAAZ;;AAIAd,aAASe,SAAT,GAAqB,CAArB;AACA,QAAIC,QAAQV,IAAIW,KAAJ,CAAUjB,QAAV,CAAZ;;AAEA,SAAK,IAAIkB,IAAI,CAAb,EAAgBA,IAAIF,MAAMG,MAA1B,EAAkCD,GAAlC,EAAuC;AACrC,UAAIF,MAAME,CAAN,MAAiB,SAAjB,IACAF,MAAME,IAAI,CAAV,MAAiB,GADjB,IAEAF,MAAME,IAAI,CAAV,MAAiB,KAFjB,IAGAF,MAAME,IAAI,CAAV,MAAiB,GAHrB,EAG0B;AACxB,YAAIE,gBAAgBC,qBAAqB,CAAC,CAAtB,EAAyBL,KAAzB,EAAgCE,CAAhC,CAApB;AACA,YAAII,gBAAgBD,qBAAqB,CAArB,EAAwBL,KAAxB,EAA+BE,IAAI,CAAnC,CAApB;AACA,YAAIK,cAAcC,qBAAqBjB,IAArB,EAA2BS,MAAME,IAAI,CAAV,CAA3B,EAAyCR,KAAzC,CAAlB;AACA,YAAIU,kBAAkB,GAAlB,IACAE,kBAAkB,GADlB,IAEAA,kBAAkB,GAFlB,IAGA,OAAOC,WAAP,KAAuB,QAH3B,EAGqC;AACnCd,cAAIgB,IAAJ,CAASF,WAAT;AACAL,eAAK,CAAL;AACA;AACD;AACF;AACDT,UAAIgB,IAAJ,CAAST,MAAME,CAAN,CAAT;AACD;;AAED,WAAOT,IAAIiB,IAAJ,CAAS,EAAT,CAAP;AACD;;AAED,WAASL,oBAAT,CAA8BM,GAA9B,EAAmCX,KAAnC,EAA0CE,CAA1C,EAA6C;AAC3C,WAAO,IAAP,EAAa;AACX,UAAIU,OAAOZ,MAAME,KAAKS,GAAX,CAAX;AACA,UAAI,CAACvB,iBAAiBI,IAAjB,CAAsBoB,IAAtB,CAAL,EAAkC;AAChC,eAAOA,IAAP;AACD;AACF;AACF;;AAED,WAASJ,oBAAT,CAA8BjB,IAA9B,EAAoCsB,IAApC,EAA0CnB,KAA1C,EAAiD;AAC/C,SAAK,IAAIoB,IAAI,CAAb,EAAgBA,IAAIvB,KAAKY,MAAzB,EAAiCW,GAAjC,EAAsC;AACpC,UAAIlB,MAAML,KAAKuB,CAAL,CAAV;AACA,UAAI,OAAOlB,IAAIiB,IAAJ,CAAP,KAAqB,WAAzB,EAAsC;AACpC,eAAOE,KAAKC,SAAL,CAAepB,IAAIiB,IAAJ,CAAf,CAAP;AACD;AACF;AACD,QAAInB,KAAJ,EAAW;AACT,aAAO,WAAP;AACD;AACF;;AAEDuB,SAAOC,OAAP,GAAiB7B,OAAjB","file":"replace.js","sourcesContent":["'use strict';\n\nvar jsTokens = require('js-tokens').default;\n\nvar processEnvRe = /\\bprocess\\.env\\.[_$a-zA-Z][$\\w]+\\b/;\nvar spaceOrCommentRe = /^(?:\\s|\\/[/*])/;\n\nfunction replace(src, envs) {\n  if (!processEnvRe.test(src)) {\n    return src;\n  }\n\n  var out = [];\n  var purge = envs.some(function(env) {\n    return env._ && env._.indexOf('purge') !== -1;\n  });\n\n  jsTokens.lastIndex = 0\n  var parts = src.match(jsTokens);\n\n  for (var i = 0; i < parts.length; i++) {\n    if (parts[i    ] === 'process' &&\n        parts[i + 1] === '.' &&\n        parts[i + 2] === 'env' &&\n        parts[i + 3] === '.') {\n      var prevCodeToken = getAdjacentCodeToken(-1, parts, i);\n      var nextCodeToken = getAdjacentCodeToken(1, parts, i + 4);\n      var replacement = getReplacementString(envs, parts[i + 4], purge);\n      if (prevCodeToken !== '.' &&\n          nextCodeToken !== '.' &&\n          nextCodeToken !== '=' &&\n          typeof replacement === 'string') {\n        out.push(replacement);\n        i += 4;\n        continue;\n      }\n    }\n    out.push(parts[i]);\n  }\n\n  return out.join('');\n}\n\nfunction getAdjacentCodeToken(dir, parts, i) {\n  while (true) {\n    var part = parts[i += dir];\n    if (!spaceOrCommentRe.test(part)) {\n      return part;\n    }\n  }\n}\n\nfunction getReplacementString(envs, name, purge) {\n  for (var j = 0; j < envs.length; j++) {\n    var env = envs[j];\n    if (typeof env[name] !== 'undefined') {\n      return JSON.stringify(env[name]);\n    }\n  }\n  if (purge) {\n    return 'undefined';\n  }\n}\n\nmodule.exports = replace;\n"]}