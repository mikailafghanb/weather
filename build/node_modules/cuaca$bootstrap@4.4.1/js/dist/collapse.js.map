{"version":3,"sources":["../src/collapse.js"],"names":["NAME","DATA_KEY","EVENT_KEY","JQUERY_NO_CONFLICT","$","Default","toggle","parent","DefaultType","Event","SHOW","SHOWN","HIDE","HIDDEN","CLICK_DATA_API","ClassName","COLLAPSE","COLLAPSING","COLLAPSED","Dimension","WIDTH","HEIGHT","Selector","ACTIVES","DATA_TOGGLE","Collapse","document","element","toggleList","i","len","elem","selector","Util","filterElement","foundElem","show","actives","activesData","startEvent","dimension","complete","capitalizedDimension","transitionDuration","hide","triggerArrayLength","trigger","$elem","setTransitioning","dispose","_getConfig","config","Boolean","_getDimension","hasWidth","_getParent","children","_addAriaAndCollapsedClass","isOpen","triggerArray","_getTargetFromElement","_jQueryInterface","$this","data","_config","event","$trigger","selectors","$target"],"mappings":"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","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.4.1): collapse.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\nimport Util from './util'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME                = 'collapse'\nconst VERSION             = '4.4.1'\nconst DATA_KEY            = 'bs.collapse'\nconst EVENT_KEY           = `.${DATA_KEY}`\nconst DATA_API_KEY        = '.data-api'\nconst JQUERY_NO_CONFLICT  = $.fn[NAME]\n\nconst Default = {\n  toggle : true,\n  parent : ''\n}\n\nconst DefaultType = {\n  toggle : 'boolean',\n  parent : '(string|element)'\n}\n\nconst Event = {\n  SHOW           : `show${EVENT_KEY}`,\n  SHOWN          : `shown${EVENT_KEY}`,\n  HIDE           : `hide${EVENT_KEY}`,\n  HIDDEN         : `hidden${EVENT_KEY}`,\n  CLICK_DATA_API : `click${EVENT_KEY}${DATA_API_KEY}`\n}\n\nconst ClassName = {\n  SHOW       : 'show',\n  COLLAPSE   : 'collapse',\n  COLLAPSING : 'collapsing',\n  COLLAPSED  : 'collapsed'\n}\n\nconst Dimension = {\n  WIDTH  : 'width',\n  HEIGHT : 'height'\n}\n\nconst Selector = {\n  ACTIVES     : '.show, .collapsing',\n  DATA_TOGGLE : '[data-toggle=\"collapse\"]'\n}\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Collapse {\n  constructor(element, config) {\n    this._isTransitioning = false\n    this._element         = element\n    this._config          = this._getConfig(config)\n    this._triggerArray    = [].slice.call(document.querySelectorAll(\n      `[data-toggle=\"collapse\"][href=\"#${element.id}\"],` +\n      `[data-toggle=\"collapse\"][data-target=\"#${element.id}\"]`\n    ))\n\n    const toggleList = [].slice.call(document.querySelectorAll(Selector.DATA_TOGGLE))\n    for (let i = 0, len = toggleList.length; i < len; i++) {\n      const elem = toggleList[i]\n      const selector = Util.getSelectorFromElement(elem)\n      const filterElement = [].slice.call(document.querySelectorAll(selector))\n        .filter((foundElem) => foundElem === element)\n\n      if (selector !== null && filterElement.length > 0) {\n        this._selector = selector\n        this._triggerArray.push(elem)\n      }\n    }\n\n    this._parent = this._config.parent ? this._getParent() : null\n\n    if (!this._config.parent) {\n      this._addAriaAndCollapsedClass(this._element, this._triggerArray)\n    }\n\n    if (this._config.toggle) {\n      this.toggle()\n    }\n  }\n\n  // Getters\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  static get Default() {\n    return Default\n  }\n\n  // Public\n\n  toggle() {\n    if ($(this._element).hasClass(ClassName.SHOW)) {\n      this.hide()\n    } else {\n      this.show()\n    }\n  }\n\n  show() {\n    if (this._isTransitioning ||\n      $(this._element).hasClass(ClassName.SHOW)) {\n      return\n    }\n\n    let actives\n    let activesData\n\n    if (this._parent) {\n      actives = [].slice.call(this._parent.querySelectorAll(Selector.ACTIVES))\n        .filter((elem) => {\n          if (typeof this._config.parent === 'string') {\n            return elem.getAttribute('data-parent') === this._config.parent\n          }\n\n          return elem.classList.contains(ClassName.COLLAPSE)\n        })\n\n      if (actives.length === 0) {\n        actives = null\n      }\n    }\n\n    if (actives) {\n      activesData = $(actives).not(this._selector).data(DATA_KEY)\n      if (activesData && activesData._isTransitioning) {\n        return\n      }\n    }\n\n    const startEvent = $.Event(Event.SHOW)\n    $(this._element).trigger(startEvent)\n    if (startEvent.isDefaultPrevented()) {\n      return\n    }\n\n    if (actives) {\n      Collapse._jQueryInterface.call($(actives).not(this._selector), 'hide')\n      if (!activesData) {\n        $(actives).data(DATA_KEY, null)\n      }\n    }\n\n    const dimension = this._getDimension()\n\n    $(this._element)\n      .removeClass(ClassName.COLLAPSE)\n      .addClass(ClassName.COLLAPSING)\n\n    this._element.style[dimension] = 0\n\n    if (this._triggerArray.length) {\n      $(this._triggerArray)\n        .removeClass(ClassName.COLLAPSED)\n        .attr('aria-expanded', true)\n    }\n\n    this.setTransitioning(true)\n\n    const complete = () => {\n      $(this._element)\n        .removeClass(ClassName.COLLAPSING)\n        .addClass(ClassName.COLLAPSE)\n        .addClass(ClassName.SHOW)\n\n      this._element.style[dimension] = ''\n\n      this.setTransitioning(false)\n\n      $(this._element).trigger(Event.SHOWN)\n    }\n\n    const capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1)\n    const scrollSize = `scroll${capitalizedDimension}`\n    const transitionDuration = Util.getTransitionDurationFromElement(this._element)\n\n    $(this._element)\n      .one(Util.TRANSITION_END, complete)\n      .emulateTransitionEnd(transitionDuration)\n\n    this._element.style[dimension] = `${this._element[scrollSize]}px`\n  }\n\n  hide() {\n    if (this._isTransitioning ||\n      !$(this._element).hasClass(ClassName.SHOW)) {\n      return\n    }\n\n    const startEvent = $.Event(Event.HIDE)\n    $(this._element).trigger(startEvent)\n    if (startEvent.isDefaultPrevented()) {\n      return\n    }\n\n    const dimension = this._getDimension()\n\n    this._element.style[dimension] = `${this._element.getBoundingClientRect()[dimension]}px`\n\n    Util.reflow(this._element)\n\n    $(this._element)\n      .addClass(ClassName.COLLAPSING)\n      .removeClass(ClassName.COLLAPSE)\n      .removeClass(ClassName.SHOW)\n\n    const triggerArrayLength = this._triggerArray.length\n    if (triggerArrayLength > 0) {\n      for (let i = 0; i < triggerArrayLength; i++) {\n        const trigger = this._triggerArray[i]\n        const selector = Util.getSelectorFromElement(trigger)\n\n        if (selector !== null) {\n          const $elem = $([].slice.call(document.querySelectorAll(selector)))\n          if (!$elem.hasClass(ClassName.SHOW)) {\n            $(trigger).addClass(ClassName.COLLAPSED)\n              .attr('aria-expanded', false)\n          }\n        }\n      }\n    }\n\n    this.setTransitioning(true)\n\n    const complete = () => {\n      this.setTransitioning(false)\n      $(this._element)\n        .removeClass(ClassName.COLLAPSING)\n        .addClass(ClassName.COLLAPSE)\n        .trigger(Event.HIDDEN)\n    }\n\n    this._element.style[dimension] = ''\n    const transitionDuration = Util.getTransitionDurationFromElement(this._element)\n\n    $(this._element)\n      .one(Util.TRANSITION_END, complete)\n      .emulateTransitionEnd(transitionDuration)\n  }\n\n  setTransitioning(isTransitioning) {\n    this._isTransitioning = isTransitioning\n  }\n\n  dispose() {\n    $.removeData(this._element, DATA_KEY)\n\n    this._config          = null\n    this._parent          = null\n    this._element         = null\n    this._triggerArray    = null\n    this._isTransitioning = null\n  }\n\n  // Private\n\n  _getConfig(config) {\n    config = {\n      ...Default,\n      ...config\n    }\n    config.toggle = Boolean(config.toggle) // Coerce string values\n    Util.typeCheckConfig(NAME, config, DefaultType)\n    return config\n  }\n\n  _getDimension() {\n    const hasWidth = $(this._element).hasClass(Dimension.WIDTH)\n    return hasWidth ? Dimension.WIDTH : Dimension.HEIGHT\n  }\n\n  _getParent() {\n    let parent\n\n    if (Util.isElement(this._config.parent)) {\n      parent = this._config.parent\n\n      // It's a jQuery object\n      if (typeof this._config.parent.jquery !== 'undefined') {\n        parent = this._config.parent[0]\n      }\n    } else {\n      parent = document.querySelector(this._config.parent)\n    }\n\n    const selector =\n      `[data-toggle=\"collapse\"][data-parent=\"${this._config.parent}\"]`\n\n    const children = [].slice.call(parent.querySelectorAll(selector))\n    $(children).each((i, element) => {\n      this._addAriaAndCollapsedClass(\n        Collapse._getTargetFromElement(element),\n        [element]\n      )\n    })\n\n    return parent\n  }\n\n  _addAriaAndCollapsedClass(element, triggerArray) {\n    const isOpen = $(element).hasClass(ClassName.SHOW)\n\n    if (triggerArray.length) {\n      $(triggerArray)\n        .toggleClass(ClassName.COLLAPSED, !isOpen)\n        .attr('aria-expanded', isOpen)\n    }\n  }\n\n  // Static\n\n  static _getTargetFromElement(element) {\n    const selector = Util.getSelectorFromElement(element)\n    return selector ? document.querySelector(selector) : null\n  }\n\n  static _jQueryInterface(config) {\n    return this.each(function () {\n      const $this   = $(this)\n      let data      = $this.data(DATA_KEY)\n      const _config = {\n        ...Default,\n        ...$this.data(),\n        ...typeof config === 'object' && config ? config : {}\n      }\n\n      if (!data && _config.toggle && /show|hide/.test(config)) {\n        _config.toggle = false\n      }\n\n      if (!data) {\n        data = new Collapse(this, _config)\n        $this.data(DATA_KEY, data)\n      }\n\n      if (typeof config === 'string') {\n        if (typeof data[config] === 'undefined') {\n          throw new TypeError(`No method named \"${config}\"`)\n        }\n        data[config]()\n      }\n    })\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\n$(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {\n  // preventDefault only for <a> elements (which change the URL) not inside the collapsible element\n  if (event.currentTarget.tagName === 'A') {\n    event.preventDefault()\n  }\n\n  const $trigger = $(this)\n  const selector = Util.getSelectorFromElement(this)\n  const selectors = [].slice.call(document.querySelectorAll(selector))\n\n  $(selectors).each(function () {\n    const $target = $(this)\n    const data    = $target.data(DATA_KEY)\n    const config  = data ? 'toggle' : $trigger.data()\n    Collapse._jQueryInterface.call($target, config)\n  })\n})\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n$.fn[NAME] = Collapse._jQueryInterface\n$.fn[NAME].Constructor = Collapse\n$.fn[NAME].noConflict = () => {\n  $.fn[NAME] = JQUERY_NO_CONFLICT\n  return Collapse._jQueryInterface\n}\n\nexport default Collapse\n"]}