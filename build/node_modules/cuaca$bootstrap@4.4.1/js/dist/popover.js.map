{"version":3,"sources":["../src/popover.js"],"names":["NAME","DATA_KEY","EVENT_KEY","JQUERY_NO_CONFLICT","$","CLASS_PREFIX","BSCLS_PREFIX_REGEX","Default","Tooltip","placement","trigger","content","template","DefaultType","ClassName","FADE","SHOW","Selector","TITLE","CONTENT","Event","HIDE","HIDDEN","SHOWN","INSERTED","CLICK","FOCUSIN","FOCUSOUT","MOUSEENTER","MOUSELEAVE","Popover","isWithContent","addAttachmentClass","getTipElement","setContent","$tip","_getContent","_cleanTipClass","tabClass","_jQueryInterface","data","_config"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA;;;;;;AAMA,QAAMA,OAAN,SAAA;;AAEA,QAAMC,WAAN,YAAA;AACA,QAAMC,YAAS,MAAf,QAAA;AACA,QAAMC,qBAAsBC,EAAAA,EAAAA,CAA5B,IAA4BA,CAA5B;AACA,QAAMC,eAAN,YAAA;AACA,QAAMC,qBAAsB,IAAA,MAAA,CAAA,YAAA,YAAA,GAAA,MAAA,EAA5B,GAA4B,CAA5B;;AAEA,QAAMC,UAAO,eAAA,EAAA,EACRC,QADQ,OAAA,EAAA;AAEXC,iBAFW,OAAA;AAGXC,eAHW,OAAA;AAIXC,eAJW,EAAA;AAKXC,gBAAY,yCAAA,2BAAA,GAAA,kCAAA,GAGA;AARD,KAAA,CAAb;;AAWA,QAAMC,cAAW,eAAA,EAAA,EACZL,QADY,WAAA,EAAA;AAEfG,eAAU;AAFK,KAAA,CAAjB;;AAKA,QAAMG,YAAY;AAChBC,YADgB,MAAA;AAEhBC,YAAO;AAFS,KAAlB;AAKA,QAAMC,WAAW;AACfC,aADe,iBAAA;AAEfC,eAAU;AAFK,KAAjB;AAKA,QAAMC,QAAQ;AACZC,YAAI,SADQ,SAAA;AAEZC,cAAM,WAFM,SAAA;AAGZN,YAAI,SAHQ,SAAA;AAIZO,aAAK,UAJO,SAAA;AAKZC,gBAAQ,aALI,SAAA;AAMZC,aAAK,UANO,SAAA;AAOZC,eAAO,YAPK,SAAA;AAQZC,gBAAQ,aARI,SAAA;AASZC,kBAAU,eATE,SAAA;AAUZC,kBAAU,eAAgB3B;AAVd,KAAd;AAaA;;;;;;QAMM4B;;;;;;;;;;;AA+BJ;aAEAC,a,GAAAA,SAAAA,aAAAA,GAAgB;AACd,eAAO,KAAA,QAAA,MAAmB,KAA1B,WAA0B,EAA1B;AACD,O;;aAEDC,kB,GAAAA,SAAAA,kBAAAA,CAAAA,UAAAA,EAA+B;AAC7B5B,UAAE,KAAFA,aAAE,EAAFA,EAAAA,QAAAA,CAAAA,eAAAA,GAAAA,GAAAA,UAAAA;AACD,O;;aAED6B,a,GAAAA,SAAAA,aAAAA,GAAgB;AACd,aAAA,GAAA,GAAW,KAAA,GAAA,IAAY7B,EAAE,KAAA,MAAA,CAAFA,QAAAA,EAAvB,CAAuBA,CAAvB;AACA,eAAO,KAAP,GAAA;AACD,O;;aAED8B,U,GAAAA,SAAAA,UAAAA,GAAa;AACX,YAAMC,OAAO/B,EAAE,KADJ,aACI,EAAFA,CAAb,CADW,CAAA;;AAIX,aAAA,iBAAA,CAAuB+B,KAAAA,IAAAA,CAAUlB,SAAjC,KAAuBkB,CAAvB,EAAkD,KAAlD,QAAkD,EAAlD;;AACA,YAAIxB,UAAU,KAAd,WAAc,EAAd;;AACA,YAAI,OAAA,OAAA,KAAJ,UAAA,EAAmC;AACjCA,oBAAUA,QAAAA,IAAAA,CAAa,KAAvBA,OAAUA,CAAVA;AACD;;AACD,aAAA,iBAAA,CAAuBwB,KAAAA,IAAAA,CAAUlB,SAAjC,OAAuBkB,CAAvB,EAAA,OAAA;AAEAA,aAAAA,WAAAA,CAAoBrB,UAApBqB,IAAoBrB,GAApBqB,GAAoBrB,GAAkBA,UAAtCqB,IAAAA;AACD,O,CAAA;;;aAIDC,W,GAAAA,SAAAA,WAAAA,GAAc;AACZ,eAAO,KAAA,OAAA,CAAA,YAAA,CAAA,cAAA,KACL,KAAA,MAAA,CADF,OAAA;AAED,O;;aAEDC,c,GAAAA,SAAAA,cAAAA,GAAiB;AACf,YAAMF,OAAO/B,EAAE,KAAf,aAAe,EAAFA,CAAb;AACA,YAAMkC,WAAWH,KAAAA,IAAAA,CAAAA,OAAAA,EAAAA,KAAAA,CAAjB,kBAAiBA,CAAjB;;AACA,YAAIG,aAAAA,IAAAA,IAAqBA,SAAAA,MAAAA,GAAzB,CAAA,EAA8C;AAC5CH,eAAAA,WAAAA,CAAiBG,SAAAA,IAAAA,CAAjBH,EAAiBG,CAAjBH;AACD;AACF,O,CAAA;;;cAIMI,gB,GAAP,SAAA,gBAAA,CAAA,MAAA,EAAgC;AAC9B,eAAO,KAAA,IAAA,CAAU,YAAY;AAC3B,cAAIC,OAAOpC,EAAAA,IAAAA,EAAAA,IAAAA,CAAX,QAAWA,CAAX;;AACA,cAAMqC,UAAU,OAAA,MAAA,KAAA,QAAA,GAAA,MAAA,GAAhB,IAAA;;AAEA,cAAI,CAAA,IAAA,IAAS,eAAA,IAAA,CAAb,MAAa,CAAb,EAA0C;AACxC;AACD;;AAED,cAAI,CAAJ,IAAA,EAAW;AACTD,mBAAO,IAAA,OAAA,CAAA,IAAA,EAAPA,OAAO,CAAPA;AACApC,cAAAA,IAAAA,EAAAA,IAAAA,CAAAA,QAAAA,EAAAA,IAAAA;AACD;;AAED,cAAI,OAAA,MAAA,KAAJ,QAAA,EAAgC;AAC9B,gBAAI,OAAOoC,KAAP,MAAOA,CAAP,KAAJ,WAAA,EAAyC;AACvC,oBAAM,IAAA,SAAA,CAAA,uBAAA,MAAA,GAAN,IAAM,CAAN;AACD;;AACDA,iBAAAA,MAAAA;AACD;AAlBH,SAAO,CAAP;AAoBD,O;;;;AAjGD;4BAEqB;AACnB,iBAxDJ,OAwDI;AACD;;;4BAEoB;AACnB,iBAAA,OAAA;AACD;;;4BAEiB;AAChB,iBAAA,IAAA;AACD;;;4BAEqB;AACpB,iBAAA,QAAA;AACD;;;4BAEkB;AACjB,iBAAA,KAAA;AACD;;;4BAEsB;AACrB,iBAAA,SAAA;AACD;;;4BAEwB;AACvB,iBAAA,WAAA;AACD;;;;MA7BmBhC,O;AAqGtB;;;;;;AAMAJ,MAAAA,EAAAA,CAAAA,IAAAA,IAAa0B,QAAb1B,gBAAAA;AACAA,MAAAA,EAAAA,CAAAA,IAAAA,EAAAA,WAAAA,GAAAA,OAAAA;;AACAA,MAAAA,EAAAA,CAAAA,IAAAA,EAAAA,UAAAA,GAAwB,YAAM;AAC5BA,QAAAA,EAAAA,CAAAA,IAAAA,IAAAA,kBAAAA;AACA,aAAO0B,QAAP,gBAAA;AAFF1B,KAAAA","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.4.1): popover.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\nimport Tooltip from './tooltip'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME                = 'popover'\nconst VERSION             = '4.4.1'\nconst DATA_KEY            = 'bs.popover'\nconst EVENT_KEY           = `.${DATA_KEY}`\nconst JQUERY_NO_CONFLICT  = $.fn[NAME]\nconst CLASS_PREFIX        = 'bs-popover'\nconst BSCLS_PREFIX_REGEX  = new RegExp(`(^|\\\\s)${CLASS_PREFIX}\\\\S+`, 'g')\n\nconst Default = {\n  ...Tooltip.Default,\n  placement : 'right',\n  trigger   : 'click',\n  content   : '',\n  template  : '<div class=\"popover\" role=\"tooltip\">' +\n              '<div class=\"arrow\"></div>' +\n              '<h3 class=\"popover-header\"></h3>' +\n              '<div class=\"popover-body\"></div></div>'\n}\n\nconst DefaultType = {\n  ...Tooltip.DefaultType,\n  content : '(string|element|function)'\n}\n\nconst ClassName = {\n  FADE : 'fade',\n  SHOW : 'show'\n}\n\nconst Selector = {\n  TITLE   : '.popover-header',\n  CONTENT : '.popover-body'\n}\n\nconst Event = {\n  HIDE       : `hide${EVENT_KEY}`,\n  HIDDEN     : `hidden${EVENT_KEY}`,\n  SHOW       : `show${EVENT_KEY}`,\n  SHOWN      : `shown${EVENT_KEY}`,\n  INSERTED   : `inserted${EVENT_KEY}`,\n  CLICK      : `click${EVENT_KEY}`,\n  FOCUSIN    : `focusin${EVENT_KEY}`,\n  FOCUSOUT   : `focusout${EVENT_KEY}`,\n  MOUSEENTER : `mouseenter${EVENT_KEY}`,\n  MOUSELEAVE : `mouseleave${EVENT_KEY}`\n}\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Popover extends Tooltip {\n  // Getters\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  static get Default() {\n    return Default\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  static get DATA_KEY() {\n    return DATA_KEY\n  }\n\n  static get Event() {\n    return Event\n  }\n\n  static get EVENT_KEY() {\n    return EVENT_KEY\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  // Overrides\n\n  isWithContent() {\n    return this.getTitle() || this._getContent()\n  }\n\n  addAttachmentClass(attachment) {\n    $(this.getTipElement()).addClass(`${CLASS_PREFIX}-${attachment}`)\n  }\n\n  getTipElement() {\n    this.tip = this.tip || $(this.config.template)[0]\n    return this.tip\n  }\n\n  setContent() {\n    const $tip = $(this.getTipElement())\n\n    // We use append for html objects to maintain js events\n    this.setElementContent($tip.find(Selector.TITLE), this.getTitle())\n    let content = this._getContent()\n    if (typeof content === 'function') {\n      content = content.call(this.element)\n    }\n    this.setElementContent($tip.find(Selector.CONTENT), content)\n\n    $tip.removeClass(`${ClassName.FADE} ${ClassName.SHOW}`)\n  }\n\n  // Private\n\n  _getContent() {\n    return this.element.getAttribute('data-content') ||\n      this.config.content\n  }\n\n  _cleanTipClass() {\n    const $tip = $(this.getTipElement())\n    const tabClass = $tip.attr('class').match(BSCLS_PREFIX_REGEX)\n    if (tabClass !== null && tabClass.length > 0) {\n      $tip.removeClass(tabClass.join(''))\n    }\n  }\n\n  // Static\n\n  static _jQueryInterface(config) {\n    return this.each(function () {\n      let data = $(this).data(DATA_KEY)\n      const _config = typeof config === 'object' ? config : null\n\n      if (!data && /dispose|hide/.test(config)) {\n        return\n      }\n\n      if (!data) {\n        data = new Popover(this, _config)\n        $(this).data(DATA_KEY, data)\n      }\n\n      if (typeof config === 'string') {\n        if (typeof data[config] === 'undefined') {\n          throw new TypeError(`No method named \"${config}\"`)\n        }\n        data[config]()\n      }\n    })\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n$.fn[NAME] = Popover._jQueryInterface\n$.fn[NAME].Constructor = Popover\n$.fn[NAME].noConflict = () => {\n  $.fn[NAME] = JQUERY_NO_CONFLICT\n  return Popover._jQueryInterface\n}\n\nexport default Popover\n"]}