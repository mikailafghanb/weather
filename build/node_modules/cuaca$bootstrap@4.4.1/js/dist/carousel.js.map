{"version":3,"sources":["../src/carousel.js"],"names":["NAME","DATA_KEY","EVENT_KEY","DATA_API_KEY","JQUERY_NO_CONFLICT","$","Default","interval","keyboard","slide","pause","wrap","touch","DefaultType","Direction","NEXT","PREV","LEFT","RIGHT","Event","SLIDE","SLID","KEYDOWN","MOUSEENTER","MOUSELEAVE","TOUCHSTART","TOUCHMOVE","TOUCHEND","POINTERDOWN","POINTERUP","DRAG_START","LOAD_DATA_API","CLICK_DATA_API","ClassName","CAROUSEL","ACTIVE","ITEM","POINTER_EVENT","Selector","ACTIVE_ITEM","ITEM_IMG","NEXT_PREV","INDICATORS","DATA_SLIDE","DATA_RIDE","PointerType","TOUCH","PEN","Carousel","document","navigator","Boolean","window","next","nextWhenVisible","prev","Util","clearInterval","cycle","setInterval","to","activeIndex","index","direction","dispose","_getConfig","config","_handleSwipe","absDeltax","Math","_addEventListeners","_addTouchEventListeners","start","event","move","end","clearTimeout","setTimeout","TOUCHEVENT_COMPAT_WAIT","e","_keydown","_getItemIndex","element","_getItemByDirection","isNextDirection","isPrevDirection","lastItemIndex","isGoingToWrap","delta","itemIndex","_triggerSlideEvent","targetIndex","fromIndex","slideEvent","relatedTarget","from","_setActiveIndicatorElement","indicators","nextIndicator","_slide","activeElement","activeElementIndex","nextElement","nextElementIndex","isCycling","directionalClassName","orderClassName","eventDirectionName","slidEvent","nextElementInterval","parseInt","transitionDuration","_jQueryInterface","data","_config","action","_dataApiClickHandler","selector","target","slideIndex","carousels","i","len","$carousel"],"mappings":"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","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.4.1): carousel.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\nimport Util from './util'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME                   = 'carousel'\nconst VERSION                = '4.4.1'\nconst DATA_KEY               = 'bs.carousel'\nconst EVENT_KEY              = `.${DATA_KEY}`\nconst DATA_API_KEY           = '.data-api'\nconst JQUERY_NO_CONFLICT     = $.fn[NAME]\nconst ARROW_LEFT_KEYCODE     = 37 // KeyboardEvent.which value for left arrow key\nconst ARROW_RIGHT_KEYCODE    = 39 // KeyboardEvent.which value for right arrow key\nconst TOUCHEVENT_COMPAT_WAIT = 500 // Time for mouse compat events to fire after touch\nconst SWIPE_THRESHOLD        = 40\n\nconst Default = {\n  interval : 5000,\n  keyboard : true,\n  slide    : false,\n  pause    : 'hover',\n  wrap     : true,\n  touch    : true\n}\n\nconst DefaultType = {\n  interval : '(number|boolean)',\n  keyboard : 'boolean',\n  slide    : '(boolean|string)',\n  pause    : '(string|boolean)',\n  wrap     : 'boolean',\n  touch    : 'boolean'\n}\n\nconst Direction = {\n  NEXT     : 'next',\n  PREV     : 'prev',\n  LEFT     : 'left',\n  RIGHT    : 'right'\n}\n\nconst Event = {\n  SLIDE          : `slide${EVENT_KEY}`,\n  SLID           : `slid${EVENT_KEY}`,\n  KEYDOWN        : `keydown${EVENT_KEY}`,\n  MOUSEENTER     : `mouseenter${EVENT_KEY}`,\n  MOUSELEAVE     : `mouseleave${EVENT_KEY}`,\n  TOUCHSTART     : `touchstart${EVENT_KEY}`,\n  TOUCHMOVE      : `touchmove${EVENT_KEY}`,\n  TOUCHEND       : `touchend${EVENT_KEY}`,\n  POINTERDOWN    : `pointerdown${EVENT_KEY}`,\n  POINTERUP      : `pointerup${EVENT_KEY}`,\n  DRAG_START     : `dragstart${EVENT_KEY}`,\n  LOAD_DATA_API  : `load${EVENT_KEY}${DATA_API_KEY}`,\n  CLICK_DATA_API : `click${EVENT_KEY}${DATA_API_KEY}`\n}\n\nconst ClassName = {\n  CAROUSEL      : 'carousel',\n  ACTIVE        : 'active',\n  SLIDE         : 'slide',\n  RIGHT         : 'carousel-item-right',\n  LEFT          : 'carousel-item-left',\n  NEXT          : 'carousel-item-next',\n  PREV          : 'carousel-item-prev',\n  ITEM          : 'carousel-item',\n  POINTER_EVENT : 'pointer-event'\n}\n\nconst Selector = {\n  ACTIVE      : '.active',\n  ACTIVE_ITEM : '.active.carousel-item',\n  ITEM        : '.carousel-item',\n  ITEM_IMG    : '.carousel-item img',\n  NEXT_PREV   : '.carousel-item-next, .carousel-item-prev',\n  INDICATORS  : '.carousel-indicators',\n  DATA_SLIDE  : '[data-slide], [data-slide-to]',\n  DATA_RIDE   : '[data-ride=\"carousel\"]'\n}\n\nconst PointerType = {\n  TOUCH : 'touch',\n  PEN   : 'pen'\n}\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\nclass Carousel {\n  constructor(element, config) {\n    this._items         = null\n    this._interval      = null\n    this._activeElement = null\n    this._isPaused      = false\n    this._isSliding     = false\n    this.touchTimeout   = null\n    this.touchStartX    = 0\n    this.touchDeltaX    = 0\n\n    this._config            = this._getConfig(config)\n    this._element           = element\n    this._indicatorsElement = this._element.querySelector(Selector.INDICATORS)\n    this._touchSupported    = 'ontouchstart' in document.documentElement || navigator.maxTouchPoints > 0\n    this._pointerEvent      = Boolean(window.PointerEvent || window.MSPointerEvent)\n\n    this._addEventListeners()\n  }\n\n  // Getters\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  static get Default() {\n    return Default\n  }\n\n  // Public\n\n  next() {\n    if (!this._isSliding) {\n      this._slide(Direction.NEXT)\n    }\n  }\n\n  nextWhenVisible() {\n    // Don't call next when the page isn't visible\n    // or the carousel or its parent isn't visible\n    if (!document.hidden &&\n      ($(this._element).is(':visible') && $(this._element).css('visibility') !== 'hidden')) {\n      this.next()\n    }\n  }\n\n  prev() {\n    if (!this._isSliding) {\n      this._slide(Direction.PREV)\n    }\n  }\n\n  pause(event) {\n    if (!event) {\n      this._isPaused = true\n    }\n\n    if (this._element.querySelector(Selector.NEXT_PREV)) {\n      Util.triggerTransitionEnd(this._element)\n      this.cycle(true)\n    }\n\n    clearInterval(this._interval)\n    this._interval = null\n  }\n\n  cycle(event) {\n    if (!event) {\n      this._isPaused = false\n    }\n\n    if (this._interval) {\n      clearInterval(this._interval)\n      this._interval = null\n    }\n\n    if (this._config.interval && !this._isPaused) {\n      this._interval = setInterval(\n        (document.visibilityState ? this.nextWhenVisible : this.next).bind(this),\n        this._config.interval\n      )\n    }\n  }\n\n  to(index) {\n    this._activeElement = this._element.querySelector(Selector.ACTIVE_ITEM)\n\n    const activeIndex = this._getItemIndex(this._activeElement)\n\n    if (index > this._items.length - 1 || index < 0) {\n      return\n    }\n\n    if (this._isSliding) {\n      $(this._element).one(Event.SLID, () => this.to(index))\n      return\n    }\n\n    if (activeIndex === index) {\n      this.pause()\n      this.cycle()\n      return\n    }\n\n    const direction = index > activeIndex\n      ? Direction.NEXT\n      : Direction.PREV\n\n    this._slide(direction, this._items[index])\n  }\n\n  dispose() {\n    $(this._element).off(EVENT_KEY)\n    $.removeData(this._element, DATA_KEY)\n\n    this._items             = null\n    this._config            = null\n    this._element           = null\n    this._interval          = null\n    this._isPaused          = null\n    this._isSliding         = null\n    this._activeElement     = null\n    this._indicatorsElement = null\n  }\n\n  // Private\n\n  _getConfig(config) {\n    config = {\n      ...Default,\n      ...config\n    }\n    Util.typeCheckConfig(NAME, config, DefaultType)\n    return config\n  }\n\n  _handleSwipe() {\n    const absDeltax = Math.abs(this.touchDeltaX)\n\n    if (absDeltax <= SWIPE_THRESHOLD) {\n      return\n    }\n\n    const direction = absDeltax / this.touchDeltaX\n\n    this.touchDeltaX = 0\n\n    // swipe left\n    if (direction > 0) {\n      this.prev()\n    }\n\n    // swipe right\n    if (direction < 0) {\n      this.next()\n    }\n  }\n\n  _addEventListeners() {\n    if (this._config.keyboard) {\n      $(this._element)\n        .on(Event.KEYDOWN, (event) => this._keydown(event))\n    }\n\n    if (this._config.pause === 'hover') {\n      $(this._element)\n        .on(Event.MOUSEENTER, (event) => this.pause(event))\n        .on(Event.MOUSELEAVE, (event) => this.cycle(event))\n    }\n\n    if (this._config.touch) {\n      this._addTouchEventListeners()\n    }\n  }\n\n  _addTouchEventListeners() {\n    if (!this._touchSupported) {\n      return\n    }\n\n    const start = (event) => {\n      if (this._pointerEvent && PointerType[event.originalEvent.pointerType.toUpperCase()]) {\n        this.touchStartX = event.originalEvent.clientX\n      } else if (!this._pointerEvent) {\n        this.touchStartX = event.originalEvent.touches[0].clientX\n      }\n    }\n\n    const move = (event) => {\n      // ensure swiping with one touch and not pinching\n      if (event.originalEvent.touches && event.originalEvent.touches.length > 1) {\n        this.touchDeltaX = 0\n      } else {\n        this.touchDeltaX = event.originalEvent.touches[0].clientX - this.touchStartX\n      }\n    }\n\n    const end = (event) => {\n      if (this._pointerEvent && PointerType[event.originalEvent.pointerType.toUpperCase()]) {\n        this.touchDeltaX = event.originalEvent.clientX - this.touchStartX\n      }\n\n      this._handleSwipe()\n      if (this._config.pause === 'hover') {\n        // If it's a touch-enabled device, mouseenter/leave are fired as\n        // part of the mouse compatibility events on first tap - the carousel\n        // would stop cycling until user tapped out of it;\n        // here, we listen for touchend, explicitly pause the carousel\n        // (as if it's the second time we tap on it, mouseenter compat event\n        // is NOT fired) and after a timeout (to allow for mouse compatibility\n        // events to fire) we explicitly restart cycling\n\n        this.pause()\n        if (this.touchTimeout) {\n          clearTimeout(this.touchTimeout)\n        }\n        this.touchTimeout = setTimeout((event) => this.cycle(event), TOUCHEVENT_COMPAT_WAIT + this._config.interval)\n      }\n    }\n\n    $(this._element.querySelectorAll(Selector.ITEM_IMG)).on(Event.DRAG_START, (e) => e.preventDefault())\n    if (this._pointerEvent) {\n      $(this._element).on(Event.POINTERDOWN, (event) => start(event))\n      $(this._element).on(Event.POINTERUP, (event) => end(event))\n\n      this._element.classList.add(ClassName.POINTER_EVENT)\n    } else {\n      $(this._element).on(Event.TOUCHSTART, (event) => start(event))\n      $(this._element).on(Event.TOUCHMOVE, (event) => move(event))\n      $(this._element).on(Event.TOUCHEND, (event) => end(event))\n    }\n  }\n\n  _keydown(event) {\n    if (/input|textarea/i.test(event.target.tagName)) {\n      return\n    }\n\n    switch (event.which) {\n      case ARROW_LEFT_KEYCODE:\n        event.preventDefault()\n        this.prev()\n        break\n      case ARROW_RIGHT_KEYCODE:\n        event.preventDefault()\n        this.next()\n        break\n      default:\n    }\n  }\n\n  _getItemIndex(element) {\n    this._items = element && element.parentNode\n      ? [].slice.call(element.parentNode.querySelectorAll(Selector.ITEM))\n      : []\n    return this._items.indexOf(element)\n  }\n\n  _getItemByDirection(direction, activeElement) {\n    const isNextDirection = direction === Direction.NEXT\n    const isPrevDirection = direction === Direction.PREV\n    const activeIndex     = this._getItemIndex(activeElement)\n    const lastItemIndex   = this._items.length - 1\n    const isGoingToWrap   = isPrevDirection && activeIndex === 0 ||\n                            isNextDirection && activeIndex === lastItemIndex\n\n    if (isGoingToWrap && !this._config.wrap) {\n      return activeElement\n    }\n\n    const delta     = direction === Direction.PREV ? -1 : 1\n    const itemIndex = (activeIndex + delta) % this._items.length\n\n    return itemIndex === -1\n      ? this._items[this._items.length - 1] : this._items[itemIndex]\n  }\n\n  _triggerSlideEvent(relatedTarget, eventDirectionName) {\n    const targetIndex = this._getItemIndex(relatedTarget)\n    const fromIndex = this._getItemIndex(this._element.querySelector(Selector.ACTIVE_ITEM))\n    const slideEvent = $.Event(Event.SLIDE, {\n      relatedTarget,\n      direction: eventDirectionName,\n      from: fromIndex,\n      to: targetIndex\n    })\n\n    $(this._element).trigger(slideEvent)\n\n    return slideEvent\n  }\n\n  _setActiveIndicatorElement(element) {\n    if (this._indicatorsElement) {\n      const indicators = [].slice.call(this._indicatorsElement.querySelectorAll(Selector.ACTIVE))\n      $(indicators)\n        .removeClass(ClassName.ACTIVE)\n\n      const nextIndicator = this._indicatorsElement.children[\n        this._getItemIndex(element)\n      ]\n\n      if (nextIndicator) {\n        $(nextIndicator).addClass(ClassName.ACTIVE)\n      }\n    }\n  }\n\n  _slide(direction, element) {\n    const activeElement = this._element.querySelector(Selector.ACTIVE_ITEM)\n    const activeElementIndex = this._getItemIndex(activeElement)\n    const nextElement   = element || activeElement &&\n      this._getItemByDirection(direction, activeElement)\n    const nextElementIndex = this._getItemIndex(nextElement)\n    const isCycling = Boolean(this._interval)\n\n    let directionalClassName\n    let orderClassName\n    let eventDirectionName\n\n    if (direction === Direction.NEXT) {\n      directionalClassName = ClassName.LEFT\n      orderClassName = ClassName.NEXT\n      eventDirectionName = Direction.LEFT\n    } else {\n      directionalClassName = ClassName.RIGHT\n      orderClassName = ClassName.PREV\n      eventDirectionName = Direction.RIGHT\n    }\n\n    if (nextElement && $(nextElement).hasClass(ClassName.ACTIVE)) {\n      this._isSliding = false\n      return\n    }\n\n    const slideEvent = this._triggerSlideEvent(nextElement, eventDirectionName)\n    if (slideEvent.isDefaultPrevented()) {\n      return\n    }\n\n    if (!activeElement || !nextElement) {\n      // Some weirdness is happening, so we bail\n      return\n    }\n\n    this._isSliding = true\n\n    if (isCycling) {\n      this.pause()\n    }\n\n    this._setActiveIndicatorElement(nextElement)\n\n    const slidEvent = $.Event(Event.SLID, {\n      relatedTarget: nextElement,\n      direction: eventDirectionName,\n      from: activeElementIndex,\n      to: nextElementIndex\n    })\n\n    if ($(this._element).hasClass(ClassName.SLIDE)) {\n      $(nextElement).addClass(orderClassName)\n\n      Util.reflow(nextElement)\n\n      $(activeElement).addClass(directionalClassName)\n      $(nextElement).addClass(directionalClassName)\n\n      const nextElementInterval = parseInt(nextElement.getAttribute('data-interval'), 10)\n      if (nextElementInterval) {\n        this._config.defaultInterval = this._config.defaultInterval || this._config.interval\n        this._config.interval = nextElementInterval\n      } else {\n        this._config.interval = this._config.defaultInterval || this._config.interval\n      }\n\n      const transitionDuration = Util.getTransitionDurationFromElement(activeElement)\n\n      $(activeElement)\n        .one(Util.TRANSITION_END, () => {\n          $(nextElement)\n            .removeClass(`${directionalClassName} ${orderClassName}`)\n            .addClass(ClassName.ACTIVE)\n\n          $(activeElement).removeClass(`${ClassName.ACTIVE} ${orderClassName} ${directionalClassName}`)\n\n          this._isSliding = false\n\n          setTimeout(() => $(this._element).trigger(slidEvent), 0)\n        })\n        .emulateTransitionEnd(transitionDuration)\n    } else {\n      $(activeElement).removeClass(ClassName.ACTIVE)\n      $(nextElement).addClass(ClassName.ACTIVE)\n\n      this._isSliding = false\n      $(this._element).trigger(slidEvent)\n    }\n\n    if (isCycling) {\n      this.cycle()\n    }\n  }\n\n  // Static\n\n  static _jQueryInterface(config) {\n    return this.each(function () {\n      let data = $(this).data(DATA_KEY)\n      let _config = {\n        ...Default,\n        ...$(this).data()\n      }\n\n      if (typeof config === 'object') {\n        _config = {\n          ..._config,\n          ...config\n        }\n      }\n\n      const action = typeof config === 'string' ? config : _config.slide\n\n      if (!data) {\n        data = new Carousel(this, _config)\n        $(this).data(DATA_KEY, data)\n      }\n\n      if (typeof config === 'number') {\n        data.to(config)\n      } else if (typeof action === 'string') {\n        if (typeof data[action] === 'undefined') {\n          throw new TypeError(`No method named \"${action}\"`)\n        }\n        data[action]()\n      } else if (_config.interval && _config.ride) {\n        data.pause()\n        data.cycle()\n      }\n    })\n  }\n\n  static _dataApiClickHandler(event) {\n    const selector = Util.getSelectorFromElement(this)\n\n    if (!selector) {\n      return\n    }\n\n    const target = $(selector)[0]\n\n    if (!target || !$(target).hasClass(ClassName.CAROUSEL)) {\n      return\n    }\n\n    const config = {\n      ...$(target).data(),\n      ...$(this).data()\n    }\n    const slideIndex = this.getAttribute('data-slide-to')\n\n    if (slideIndex) {\n      config.interval = false\n    }\n\n    Carousel._jQueryInterface.call($(target), config)\n\n    if (slideIndex) {\n      $(target).data(DATA_KEY).to(slideIndex)\n    }\n\n    event.preventDefault()\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\n$(document)\n  .on(Event.CLICK_DATA_API, Selector.DATA_SLIDE, Carousel._dataApiClickHandler)\n\n$(window).on(Event.LOAD_DATA_API, () => {\n  const carousels = [].slice.call(document.querySelectorAll(Selector.DATA_RIDE))\n  for (let i = 0, len = carousels.length; i < len; i++) {\n    const $carousel = $(carousels[i])\n    Carousel._jQueryInterface.call($carousel, $carousel.data())\n  }\n})\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n$.fn[NAME] = Carousel._jQueryInterface\n$.fn[NAME].Constructor = Carousel\n$.fn[NAME].noConflict = () => {\n  $.fn[NAME] = JQUERY_NO_CONFLICT\n  return Carousel._jQueryInterface\n}\n\nexport default Carousel\n"]}