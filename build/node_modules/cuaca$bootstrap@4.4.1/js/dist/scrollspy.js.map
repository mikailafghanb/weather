{"version":3,"sources":["../src/scrollspy.js"],"names":["NAME","DATA_KEY","EVENT_KEY","JQUERY_NO_CONFLICT","$","Default","offset","method","target","DefaultType","Event","ACTIVATE","SCROLL","LOAD_DATA_API","ClassName","DROPDOWN_ITEM","DROPDOWN_MENU","ACTIVE","Selector","DATA_SPY","NAV_LIST_GROUP","NAV_LINKS","NAV_ITEMS","LIST_ITEMS","DROPDOWN","DROPDOWN_ITEMS","DROPDOWN_TOGGLE","OffsetMethod","OFFSET","POSITION","ScrollSpy","element","refresh","autoMethod","offsetMethod","offsetBase","targets","document","targetSelector","Util","targetBCR","a","b","item","dispose","_getConfig","config","id","_getScrollTop","_getScrollHeight","Math","_getOffsetHeight","window","_process","scrollTop","scrollHeight","maxScroll","offsetLength","i","isActiveTarget","_activate","queries","$link","relatedTarget","_clear","node","_jQueryInterface","data","scrollSpys","scrollSpysLength","$spy"],"mappings":"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","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.4.1): scrollspy.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\nimport Util from './util'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME               = 'scrollspy'\nconst VERSION            = '4.4.1'\nconst DATA_KEY           = 'bs.scrollspy'\nconst EVENT_KEY          = `.${DATA_KEY}`\nconst DATA_API_KEY       = '.data-api'\nconst JQUERY_NO_CONFLICT = $.fn[NAME]\n\nconst Default = {\n  offset : 10,\n  method : 'auto',\n  target : ''\n}\n\nconst DefaultType = {\n  offset : 'number',\n  method : 'string',\n  target : '(string|element)'\n}\n\nconst Event = {\n  ACTIVATE      : `activate${EVENT_KEY}`,\n  SCROLL        : `scroll${EVENT_KEY}`,\n  LOAD_DATA_API : `load${EVENT_KEY}${DATA_API_KEY}`\n}\n\nconst ClassName = {\n  DROPDOWN_ITEM : 'dropdown-item',\n  DROPDOWN_MENU : 'dropdown-menu',\n  ACTIVE        : 'active'\n}\n\nconst Selector = {\n  DATA_SPY        : '[data-spy=\"scroll\"]',\n  ACTIVE          : '.active',\n  NAV_LIST_GROUP  : '.nav, .list-group',\n  NAV_LINKS       : '.nav-link',\n  NAV_ITEMS       : '.nav-item',\n  LIST_ITEMS      : '.list-group-item',\n  DROPDOWN        : '.dropdown',\n  DROPDOWN_ITEMS  : '.dropdown-item',\n  DROPDOWN_TOGGLE : '.dropdown-toggle'\n}\n\nconst OffsetMethod = {\n  OFFSET   : 'offset',\n  POSITION : 'position'\n}\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass ScrollSpy {\n  constructor(element, config) {\n    this._element       = element\n    this._scrollElement = element.tagName === 'BODY' ? window : element\n    this._config        = this._getConfig(config)\n    this._selector      = `${this._config.target} ${Selector.NAV_LINKS},` +\n                          `${this._config.target} ${Selector.LIST_ITEMS},` +\n                          `${this._config.target} ${Selector.DROPDOWN_ITEMS}`\n    this._offsets       = []\n    this._targets       = []\n    this._activeTarget  = null\n    this._scrollHeight  = 0\n\n    $(this._scrollElement).on(Event.SCROLL, (event) => this._process(event))\n\n    this.refresh()\n    this._process()\n  }\n\n  // Getters\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  static get Default() {\n    return Default\n  }\n\n  // Public\n\n  refresh() {\n    const autoMethod = this._scrollElement === this._scrollElement.window\n      ? OffsetMethod.OFFSET : OffsetMethod.POSITION\n\n    const offsetMethod = this._config.method === 'auto'\n      ? autoMethod : this._config.method\n\n    const offsetBase = offsetMethod === OffsetMethod.POSITION\n      ? this._getScrollTop() : 0\n\n    this._offsets = []\n    this._targets = []\n\n    this._scrollHeight = this._getScrollHeight()\n\n    const targets = [].slice.call(document.querySelectorAll(this._selector))\n\n    targets\n      .map((element) => {\n        let target\n        const targetSelector = Util.getSelectorFromElement(element)\n\n        if (targetSelector) {\n          target = document.querySelector(targetSelector)\n        }\n\n        if (target) {\n          const targetBCR = target.getBoundingClientRect()\n          if (targetBCR.width || targetBCR.height) {\n            // TODO (fat): remove sketch reliance on jQuery position/offset\n            return [\n              $(target)[offsetMethod]().top + offsetBase,\n              targetSelector\n            ]\n          }\n        }\n        return null\n      })\n      .filter((item) => item)\n      .sort((a, b) => a[0] - b[0])\n      .forEach((item) => {\n        this._offsets.push(item[0])\n        this._targets.push(item[1])\n      })\n  }\n\n  dispose() {\n    $.removeData(this._element, DATA_KEY)\n    $(this._scrollElement).off(EVENT_KEY)\n\n    this._element       = null\n    this._scrollElement = null\n    this._config        = null\n    this._selector      = null\n    this._offsets       = null\n    this._targets       = null\n    this._activeTarget  = null\n    this._scrollHeight  = null\n  }\n\n  // Private\n\n  _getConfig(config) {\n    config = {\n      ...Default,\n      ...typeof config === 'object' && config ? config : {}\n    }\n\n    if (typeof config.target !== 'string') {\n      let id = $(config.target).attr('id')\n      if (!id) {\n        id = Util.getUID(NAME)\n        $(config.target).attr('id', id)\n      }\n      config.target = `#${id}`\n    }\n\n    Util.typeCheckConfig(NAME, config, DefaultType)\n\n    return config\n  }\n\n  _getScrollTop() {\n    return this._scrollElement === window\n      ? this._scrollElement.pageYOffset : this._scrollElement.scrollTop\n  }\n\n  _getScrollHeight() {\n    return this._scrollElement.scrollHeight || Math.max(\n      document.body.scrollHeight,\n      document.documentElement.scrollHeight\n    )\n  }\n\n  _getOffsetHeight() {\n    return this._scrollElement === window\n      ? window.innerHeight : this._scrollElement.getBoundingClientRect().height\n  }\n\n  _process() {\n    const scrollTop    = this._getScrollTop() + this._config.offset\n    const scrollHeight = this._getScrollHeight()\n    const maxScroll    = this._config.offset +\n      scrollHeight -\n      this._getOffsetHeight()\n\n    if (this._scrollHeight !== scrollHeight) {\n      this.refresh()\n    }\n\n    if (scrollTop >= maxScroll) {\n      const target = this._targets[this._targets.length - 1]\n\n      if (this._activeTarget !== target) {\n        this._activate(target)\n      }\n      return\n    }\n\n    if (this._activeTarget && scrollTop < this._offsets[0] && this._offsets[0] > 0) {\n      this._activeTarget = null\n      this._clear()\n      return\n    }\n\n    const offsetLength = this._offsets.length\n    for (let i = offsetLength; i--;) {\n      const isActiveTarget = this._activeTarget !== this._targets[i] &&\n          scrollTop >= this._offsets[i] &&\n          (typeof this._offsets[i + 1] === 'undefined' ||\n              scrollTop < this._offsets[i + 1])\n\n      if (isActiveTarget) {\n        this._activate(this._targets[i])\n      }\n    }\n  }\n\n  _activate(target) {\n    this._activeTarget = target\n\n    this._clear()\n\n    const queries = this._selector\n      .split(',')\n      .map((selector) => `${selector}[data-target=\"${target}\"],${selector}[href=\"${target}\"]`)\n\n    const $link = $([].slice.call(document.querySelectorAll(queries.join(','))))\n\n    if ($link.hasClass(ClassName.DROPDOWN_ITEM)) {\n      $link.closest(Selector.DROPDOWN).find(Selector.DROPDOWN_TOGGLE).addClass(ClassName.ACTIVE)\n      $link.addClass(ClassName.ACTIVE)\n    } else {\n      // Set triggered link as active\n      $link.addClass(ClassName.ACTIVE)\n      // Set triggered links parents as active\n      // With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor\n      $link.parents(Selector.NAV_LIST_GROUP).prev(`${Selector.NAV_LINKS}, ${Selector.LIST_ITEMS}`).addClass(ClassName.ACTIVE)\n      // Handle special case when .nav-link is inside .nav-item\n      $link.parents(Selector.NAV_LIST_GROUP).prev(Selector.NAV_ITEMS).children(Selector.NAV_LINKS).addClass(ClassName.ACTIVE)\n    }\n\n    $(this._scrollElement).trigger(Event.ACTIVATE, {\n      relatedTarget: target\n    })\n  }\n\n  _clear() {\n    [].slice.call(document.querySelectorAll(this._selector))\n      .filter((node) => node.classList.contains(ClassName.ACTIVE))\n      .forEach((node) => node.classList.remove(ClassName.ACTIVE))\n  }\n\n  // Static\n\n  static _jQueryInterface(config) {\n    return this.each(function () {\n      let data = $(this).data(DATA_KEY)\n      const _config = typeof config === 'object' && config\n\n      if (!data) {\n        data = new ScrollSpy(this, _config)\n        $(this).data(DATA_KEY, data)\n      }\n\n      if (typeof config === 'string') {\n        if (typeof data[config] === 'undefined') {\n          throw new TypeError(`No method named \"${config}\"`)\n        }\n        data[config]()\n      }\n    })\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\n$(window).on(Event.LOAD_DATA_API, () => {\n  const scrollSpys = [].slice.call(document.querySelectorAll(Selector.DATA_SPY))\n  const scrollSpysLength = scrollSpys.length\n\n  for (let i = scrollSpysLength; i--;) {\n    const $spy = $(scrollSpys[i])\n    ScrollSpy._jQueryInterface.call($spy, $spy.data())\n  }\n})\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n$.fn[NAME] = ScrollSpy._jQueryInterface\n$.fn[NAME].Constructor = ScrollSpy\n$.fn[NAME].noConflict = () => {\n  $.fn[NAME] = JQUERY_NO_CONFLICT\n  return ScrollSpy._jQueryInterface\n}\n\nexport default ScrollSpy\n"]}